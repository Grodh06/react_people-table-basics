{"version":3,"sources":["api.ts","components/Links/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/Peopletable/PeopleTable.tsx","components/Page404/Page404.tsx","components/Navbar/NavBar.tsx","components/Personinfo/Personinfo.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","response","json","PersonLink","person","to","slug","style","sex","color","name","PersonRow","useParams","className","classNames","born","died","father","fatherName","mother","motherName","PeopleTable","useState","people","setPeople","useEffect","then","res","prepearedPeople","map","find","parent","title","Page404","NavBar","PersonInfo","setPerson","human","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.945e907a.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      style={person.sex === 'm'\n        ? ({ color: 'rgb(0, 71, 171)' })\n        : ({ color: 'rgb(255, 0, 0)' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../Links/PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <tr className={classNames({ 'is-selected': slug === person.slug })}>\n        <th>\n          <PersonLink person={person} />\n        </th>\n        <th>{person.sex}</th>\n        <th>{person.born}</th>\n        <th>{person.died}</th>\n        {!person.father\n          ? (<th>{person.fatherName}</th>)\n          : (\n            <th>\n              <PersonLink person={person.father} />\n            </th>\n          )}\n        {!person.mother\n          ? (<th>{person.motherName}</th>)\n          : (\n            <th>\n              <PersonLink person={person.mother} />\n            </th>\n          )}\n      </tr>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect((() => {\n    getPeople().then(res => {\n      if (res) {\n        const prepearedPeople = res.map(person => {\n          const father = res\n            .find(parent => person.fatherName === parent.name) || null;\n\n          const mother = res\n            .find(parent => person.motherName === parent.name) || null;\n\n          return ({\n            ...person,\n            fatherName: person.fatherName || '--John Doe--',\n            motherName: person.motherName || '--Jane Doe--',\n            father,\n            mother,\n          }\n          );\n        });\n\n        setPeople(prepearedPeople);\n      }\n    });\n  }), []);\n\n  return (\n    <div className=\"level-item\">\n      <table className=\"table is-striped\">\n        <thead>\n          <tr>\n            <th title=\"Name\"> Name</th>\n            <th title=\"sex\">Sex</th>\n            <th title=\"born\">Born</th>\n            <th title=\"died\">Died</th>\n            <th title=\"mother\">Mother</th>\n            <th title=\"father\">Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => {\n            return (\n              <PersonRow\n                person={person}\n                key={person.slug}\n              />\n            );\n          })}\n\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Page404: React.FC = () => (\n  <div>\n    <h1 className=\"title has-text-centered is-uppercase\">\n      Page not found\n    </h1>\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav className=\"is-flex is-justify-content-space-evenly\">\n      <NavLink to=\"/\" className=\"navbar-item\">\n        Home\n      </NavLink>\n      <NavLink to=\"people\" className=\"navbar-item\">\n        People\n      </NavLink>\n    </nav>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\n\nexport const PersonInfo: React.FC = () => {\n  const [person, setPerson] = useState<Person | null>(null);\n  const { slug } = useParams();\n\n  useEffect((() => {\n    getPeople().then(res => {\n      setPerson(res.find(human => human.slug === slug) || null);\n    });\n  }), []);\n\n  return (\n    <div>\n      {!person\n        ? (\n          <h1>\n            Person not found\n          </h1>\n        )\n        : (\n          <div className=\"section level-item\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p className=\"title is-4\">{person.name}</p>\n                  </div>\n                </div>\n\n                <div className=\"content\">\n                  <p>\n                    {`Sex: ${person.sex}`}\n                  </p>\n                  <p>\n                    {`Lived: ${person.born} - ${person.died}`}\n                  </p>\n                  <p>\n                    {`Father: ${person.fatherName}`}\n                  </p>\n                  <p>\n                    {`Mother: ${person.motherName}`}\n                  </p>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeopleTable } from './components/Peopletable/PeopleTable';\nimport { Page404 } from './components/Page404/Page404';\nimport { NavBar } from './components/Navbar/NavBar';\nimport { PersonInfo } from './components/Personinfo/Personinfo';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title level-item\">Home Page</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"people\">\n              <Route index element={<PeopleTable />} />\n              <Route path=\":slug\" element={<PersonInfo />} />\n            </Route>\n            <Route path=\"/*\" element={<Page404 />} />\n          </Routes>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}